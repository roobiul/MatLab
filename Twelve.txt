a) Jacobi Iteration
A = [10 -1 2 0; -1 11 -1 3; 2 -1 10 -1; 0 3 -1 8];
b = [6; 25; -11; 15];
x = zeros(4,1);
tol = 1e-4;
max_iter = 100;
n = length(b);
errors_jacobi = [];

for k = 1:max_iter
    x_old = x;
    for i = 1:n
        sum = A(i, [1:i-1 i+1:n]) * x_old([1:i-1 i+1:n]);
        x(i) = (b(i) - sum) / A(i,i);
    end
    err = norm(x - x_old);
    errors_jacobi(end+1) = err;
    if err < tol
        break;
    end
end

disp('Jacobi Method Solution:');
disp(x);

b) Gauss-Seidel Iteration
x = zeros(4,1);
errors_gs = [];

for k = 1:max_iter
    x_old = x;
    for i = 1:n
        sum1 = A(i, 1:i-1) * x(1:i-1);
        sum2 = A(i, i+1:n) * x_old(i+1:n);
        x(i) = (b(i) - sum1 - sum2)/A(i, i);
    end
    err = norm(x - x_old);
    errors_gs(end+1) = err;
    if err < tol
        break;
    end
end

disp('Gauss-Seidel Method Solution:');
disp(x);


c) Convergence Graph (Jacobi vs Gauss-Seidel)

plot(errors_jacobi, 'r-o'); hold on;
plot(errors_gs, 'b-*');
legend('Jacobi', 'Gauss-Seidel');
xlabel('Iteration');
ylabel('Error');
title('Convergence of Iterative Methods');
grid on;

